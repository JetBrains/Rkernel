diff --git a/inst/include/Rcpp/DataFrame.h b/inst/include/Rcpp/DataFrame.h
index 580eb5a2..33470fc7 100644
--- a/inst/include/Rcpp/DataFrame.h
+++ b/inst/include/Rcpp/DataFrame.h
@@ -78,8 +78,10 @@ namespace Rcpp{
             }
             if (Rf_isNull(rn))
                 return 0;
-            if (TYPEOF(rn) == INTSXP && LENGTH(rn) == 2 && INTEGER(rn)[0] == NA_INTEGER)
-                return abs(INTEGER(rn)[1]);
+            if (TYPEOF(rn) == INTSXP && LENGTH(rn) == 2 && INTEGER(rn)[0] == NA_INTEGER) {
+              int x = INTEGER(rn)[1];
+              return (x < 0) ? -x : x;
+            }
             return LENGTH(rn);
         }
 
diff --git a/inst/include/Rcpp/api/meat/proxy.h b/inst/include/Rcpp/api/meat/proxy.h
index e7dffde6..320a058a 100644
--- a/inst/include/Rcpp/api/meat/proxy.h
+++ b/inst/include/Rcpp/api/meat/proxy.h
@@ -175,7 +175,7 @@ DottedPairProxyPolicy<CLASS>::const_DottedPairProxy::operator T() const {
 // FieldProxy
 template <typename CLASS>
 typename FieldProxyPolicy<CLASS>::FieldProxy&
-FieldProxyPolicy<CLASS>::FieldProxy::operator=(const FieldProxyPolicy<CLASS>::FieldProxy& rhs) {
+FieldProxyPolicy<CLASS>::FieldProxy::operator=(const typename FieldProxyPolicy<CLASS>::FieldProxy& rhs) {
     if (this != &rhs) set(rhs.get());
     return *this;
 }
diff --git a/inst/include/Rcpp/internal/NAComparator.h b/inst/include/Rcpp/internal/NAComparator.h
index 8ce0259e..57d19579 100644
--- a/inst/include/Rcpp/internal/NAComparator.h
+++ b/inst/include/Rcpp/internal/NAComparator.h
@@ -59,7 +59,7 @@ struct NAComparator<double> {
 
         // this branch inspired by data.table: see
         // https://github.com/arunsrinivasan/datatable/commit/1a3e476d3f746e18261662f484d2afa84ac7a146#commitcomment-4885242
-        if (Rcpp_IsNaN(right) and Rcpp_IsNA(left))
+        if (Rcpp_IsNaN(right) && Rcpp_IsNA(left))
             return true;
 
         if (leftNaN != rightNaN) {
diff --git a/inst/include/Rcpp/platform/compiler.h b/inst/include/Rcpp/platform/compiler.h
index 3a000038..f52d1169 100644
--- a/inst/include/Rcpp/platform/compiler.h
+++ b/inst/include/Rcpp/platform/compiler.h
@@ -38,6 +38,10 @@
 #ifdef __INTEL_COMPILER
 #define GOOD_COMPILER_FOR_RCPP
 #endif
+#if _MSC_VER > 1910
+#define GOOD_COMPILER_FOR_RCPP
+#endif
+
 
 #ifndef GOOD_COMPILER_FOR_RCPP
 # error "This compiler is not supported"
@@ -94,6 +98,18 @@
 	#if GCC_VERSION >= 40800 && __cplusplus >= 201103L
 		#define RCPP_USING_CXX11
 	#endif
+#elif defined(_MSC_VER)
+  #define HAS_STATIC_ASSERT
+  #define RCPP_USING_CXX11
+  #if __has_include(<unordered_map>)
+      #define HAS_CXX0X_UNORDERED_MAP
+  #endif
+  #if __has_include(<unordered_set>)
+      #define HAS_CXX0X_UNORDERED_SET
+  #endif
+  #if __has_include(<initializer_list>)
+      #define HAS_CXX0X_INITIALIZER_LIST
+  #endif
 #endif
 
 // Check C++0x headers
diff --git a/inst/include/Rcpp/routines.h b/inst/include/Rcpp/routines.h
index 437e42ae..47ec3b48 100644
--- a/inst/include/Rcpp/routines.h
+++ b/inst/include/Rcpp/routines.h
@@ -65,6 +65,11 @@ SEXP          rcpp_get_current_error();
 
 #else
 
+#if defined(_MSC_VER)
+#undef attribute_hidden
+#define attribute_hidden static
+#endif
+
 namespace Rcpp {
 
     #define GET_CALLABLE(__FUN__) (Fun) R_GetCCallable( "Rcpp", __FUN__ )
diff --git a/src/date.cpp b/src/date.cpp
index 2b9221c0..bf8bd6c0 100644
--- a/src/date.cpp
+++ b/src/date.cpp
@@ -133,7 +133,14 @@ namespace Rcpp {
 #include "fcntl.h"
 #include "float.h"	/* for FLT_MAX and DBL_MAX */
 
-#include <unistd.h>		// solaris needs this for read() and close()
+#ifndef _MSC_VER
+  #include <unistd.h>		// solaris needs this for read() and close()
+#else
+  #include <io.h>
+  #define read _read
+  #define open _open
+  #define close _close
+#endif
 
 
 /* merged from private.h */
@@ -1347,7 +1354,7 @@ struct tzhead {
             idays -= ip[tmp->tm_mon];
         tmp->tm_mday = (int) (idays + 1);
         tmp->tm_isdst = 0;
-#if ! (defined(__MINGW32__) || defined(__MINGW64__) || defined(__sun) || defined(sun) || defined(_AIX))
+#if ! (defined(__MINGW32__) || defined(__MINGW64__) || defined(__sun) || defined(sun) || defined(_AIX) || defined(_MSC_VER) )
 //#ifdef HAVE_TM_GMTOFF
         tmp->tm_gmtoff = offset;
 #endif
